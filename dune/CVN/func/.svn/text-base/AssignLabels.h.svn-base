////////////////////////////////////////////////////////////////////////
// \file    Assignlabels.h
///\brief   Defines an enumeration for prong classification
///
// \author psihas@fnal.gov
////////////////////////////////////////////////////////////////////////
#ifndef CVN_ASSIGNLABELS_H
#define CVN_ASSIGNLABELS_H


#include "CVN/func/InteractionType.h"
#include "CVN/func/PixelMap.h"
#include "CVN/func/ProngType.h"

#include "RecoBase/Prong.h"
#include "RecoBase/Cluster.h"
#include "RecoBase/CellHit.h"
#include "SimulationBase/MCTruth.h"


namespace cvn
{

  HitType GetHitTypeByPDG(int hPDG);

  HitType HitClassify(art::Ptr< rb::CellHit > Hit, HitType* hType, double * hPurity);

  ProngType GetTypeByPDG(int nuPDG);

  ProngType ProngClassify(const rb::Prong& Prong, ProngType* pType3D,
                          ProngType* pTypeX, ProngType* pTypeY,
			  double* purity3D, double* purityX, double* purityY,
                          double* recE, unsigned int* ncellX, unsigned int* ncellY);

  std::vector< std::pair<int, double> > GetProngPurityByPDG(const rb::Prong& prong,
							    ProngType* pType3D, double* purity3D);

  InteractionType GetInteractionType(const simb::MCTruth& truth);
  InteractionType GetInteractionTypeFromSlice(int nuPDG, bool nuCCNC,
                                              int nuMode );
  InteractionType SliceClassify(const art::Ptr<simb::MCTruth> truth, const rb::Cluster& Slice,
                                float& lepEnergy, float& nuEnergy);
}

#endif // CVN_ASSIGNLABELS_H
