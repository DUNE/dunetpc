#include "services.fcl"
#include "BackTracker.fcl"
#include "CVNProngEvaluator.fcl"
#include "CVNMapper.fcl"
#include "CVNProngAna.fcl"
process_name: cvnprongevaluator

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "cvnsliceprongana_hist_r%r_s%s.root" closeFileFast: false }
  TimeTracker:{}
  user: @local::standard_services
}
services.BackTracker: @local::standard_backtracker

# Input source is a ROOT file 
source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

outputs:
{
  out1:
  {
      module_type: RootOutput
      fileName:    "cvnsliceprongevaluator_r%r_s%s.cvn.root" 
      fastCloning: false
  }
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
  # Declare the modules
  producers:
  { 
    cvnmap:       @local::standard_cvnmapper
    cvnsliceprongeval: @local::cvnsliceprong_evaluator
  }
  analyzers:
  { 
    cvnprongana:  @local::standard_cvnprongana
  }


  # Build the paths
  map: [cvnmap, cvnsliceprongeval]
  out: [out1, cvnprongana]
}



########################################################################
