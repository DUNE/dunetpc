#include "services_dune.fcl"
#include "clusteralgorithms.fcl"
#include "SSPToOffline.fcl"

process_name: ctreeraw35t

services:
{
  # TFileService: { fileName: "test.root" }
  TimeTracker:       {}
  RandomNumberGenerator: {} 
  message:      @local::standard_info
  #user:         @local::dune35t_simulation_services
  FileCatalogMetadata:  @local::art_file_catalog_mc
  user:         @local::dune35t_services
}


source:
{
  module_type: SplitterInput
  firstEvent : 1
  maxEvents:  10
  posttriggerticks:  10000
  pretriggerticks:   0
# should be 0.5 for MC and 32 for data.
  novatickspertpctick: 32
  TimeStampThreshold:  5.

# trigger below is to start window when TPC payload appears (not just headers from RCEs.)
  MCTrigLevel:  0
  whichTrigger: 5
#  MCTrigLevel:  0
#  whichTrigger: 0

  ADCdiffThreshold:  50
  ADCsOverThreshold: 100

  TrigSeparation:   10000
  TPCInputTag : "daq:TPC:DAQ" 
  TPCInputDataProduct : "artdaq::Fragment"

  SSPInputTag : "daq:PHOTON:DAQ"
  SSPInputDataProduct : "artdaq::Fragment"

#### If the Penn stuff is in the data record.... ####
  PennInputTag : "daq:TRIGGER:DAQ"
  PennInputDataProduct : "artdaq::Fragment"

#### If the Penn stuff isn't in the data record.... ####
#  PennInputDataProduct:  "raw::RawDigit"
#  PennInputTag:  "daq::Detsim"

  NOvAClockFrequency : 64.0 # MHz

  # Added to bring up-to0date with changes Alex Himmel made...
  SSPReformatter:    @local::ssp_reformatter

}


physics:
{

#define the output stream, there could be more than one if using filters 
   stream1:  [ out1 ]
  analyzers:
  {
    chao: 
    {
      module_type:      "CTree35t"
      RawDigitLabel:    "SplitterInput:TPC"
      CalibLabel:       "caldata"
      HitsModuleLabel:  "gaushit"
      TrackModuleLabel: "particlestitcher"
      ClusterModuleLabel: "clustercheat"
      #TrackModuleLabel: "particletracks"
      outFile:          "sample.root"
      saveChannelWireMap: false
      saveChannelWireGeo: false
      InputModule:             "SplitterInput"
      MakeAllPhotonsTree:      false
      MakeDetectedPhotonsTree: false
      MakeOpDetsTree:          false
      MakeOpDetEventsTree:     false
      UncompressWithPed:       true
      ProcessMCtruth:          false
      ProcessCalib:            false
      ProcessHits:             false
      ProcessReco:             false
      ProcessOpDet:            false
    }
  }
  analysis: [ chao ] //Directory for histograms
  end_paths: [ stream1, analysis ]
}

outputs:{
  out1: 
 {
   dataTier: "raw"
   module_type: RootOutput
   fileName:    "sliced_pedestal.root" 
    #default file name, can override from command line with -o or --output
 }

}