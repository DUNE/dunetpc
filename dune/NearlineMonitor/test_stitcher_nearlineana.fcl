#include "services_dune.fcl"
#include "hitfindermodules_dune.fcl"
#include "standard_nearline35t.fcl"

process_name: NearlineAna

services:
{
  TimeTracker:       {}
  SimpleMemoryCheck:     { ignoreTotal: 1 } # default is one
  RandomNumberGenerator: {} #ART native random number generator
  FileCatalogMetadata:  @local::art_file_catalog_mc
  TFileService: { fileName: "nearlineana_hists.root" }
  user:         @local::dune35t_services
}

source: @local::standard_nearlinesplitter

physics:
{
    producers:
    {
      fasthit:            @local::dune35t_fasthitfinder      
    }

    analyzers:
    {
        nearlineana: @local::standard_nearlineana
    }

    hitfinding:   [ fasthit ]
    nearline:     [ nearlineana ]
    stream1:      [ out1 ]
    trigger_paths:[ hitfinding ]
    end_paths:    [ stream1, nearline ]  

}

outputs:{
  out1:
  {
    module_type: RootOutput
    fileName: "%ifb_stitcher_hits.root"
    dataTier: "raw"
  }
}

physics.producers.fasthit.DigitModuleLabel: "SplitterInput:TPC"


physics.analyzers.nearlineana.RawDigitsTag: "SplitterInput:TPC"  
physics.analyzers.nearlineana.UseOnlineChannels: true
physics.analyzers.nearlineana.TPCChannelMapFile: "rce_channel_map_dune35t.txt"

physics.analyzers.nearlineana.MakePedestalPerEventPlots: true
#physics.analyzers.nearlineana.PedestalPerEventChannels: [ 0, 1164 ]
physics.analyzers.nearlineana.PedestalPerEventChannels: [ 0, 128, 256, 384, 512, 640, 768, 896, 1024, 1152, 1280, 1408, 1536, 1664, 1792, 1920 ]
physics.analyzers.nearlineana.WritePedestalPerEventFile: true
physics.analyzers.nearlineana.PedestalPerEventFileName: "PedestalPerEventTest.txt"

physics.analyzers.nearlineana.MakePedestalPerTickPlots: true
physics.analyzers.nearlineana.PedestalPerTickChannels: [ 0, 128, 256, 384, 512, 640, 768, 896, 1024, 1152, 1280, 1408, 1536, 1664, 1792, 1920 ]
physics.analyzers.nearlineana.WritePedestalPerTickFile: true
physics.analyzers.nearlineana.PedestalPerTickFileName: "PedestalPerTickTest.txt"
