#include "services_dune.fcl"
#include "SSPToOffline.fcl"
#include "SplitterInput.fcl"

process_name: Splitter

services:
{
  TimeTracker:           {}
  MemoryTracker:         { ignoreTotal: 1 } # default is one
  RandomNumberGenerator: {} #ART native random number generator
  message:               @local::dune_message_services_prod_debug
  FileCatalogMetadata:   @local::art_file_catalog_data
  user:                  @local::dune35t_services
}

source: @local::split_events

#############  To configure any parameters yourself #############
#source.WhichTrigger: 3
#source.PreTriggerTicks: 1000
#source.PostTriggerTicks: 3200

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
 producers:
 {
   rns:                 { module_type: RandomNumberSaver }
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [ rns ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_%tc_split.root"
   dataTier:    "sliced"
   compressionLevel: 1
 }
}
