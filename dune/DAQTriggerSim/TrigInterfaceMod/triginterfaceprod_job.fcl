#include "services_dune.fcl"
#include "TrigInterfaceProd.fcl"
#include "trigger_services_dune.fcl"

process_name: TrigInterfaceProd

source:
{
  module_type: RootInput
  maxEvents:  -1      # Number of events to create
}



services:
{
  TFileService: { fileName: "TrigInterfaceProd_hist.root" }
  TimeTracker:       {}
  RandomNumberGenerator: {} #ART native random number generator
  user:         @local::dune35t_services
}

#Here we can switch which trigger is used via fcl

services.user.BaseTriggerService: @local::activitytrigger
#services.user.BaseTriggerService: @local::templatetrigger



outputs:
{
  out1:
  {
   module_type: RootOutput
   fileName:    "triginterfacejob.root" #default file name, can override from commandline with -o or --output
   fastCloning: false
  }
}



physics:
{
  producers:
  {
    triginterfaceprod:     @local::standard_triginterfaceprod
  }

  trigprod:      [ triginterfaceprod ]

  # define output stream:
  outstream:     [ out1 ]

  # define trigger_paths, trigger_paths is a keyword and contains the paths that modify the art::Event, 
  # ie filters and producers
  trigger_paths: [ trigprod ] 

  end_paths:     [ outstream ] 

}
