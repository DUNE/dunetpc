#include "services_dune.fcl"
#include "RegCVNMapper.fcl"
#include "RegCVNEvaluator.fcl"
#include "tools_dune.fcl"

process_name: RegCVNEvaluator

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "cvn_evaluator_r%r_s%s_hist.root"
                  closeFileFast: false }
  @table::dunefd_reco_services
  #@table::standard_services
}

#services.BackTrackerService: @local::standard_backtrackerservice

# Input source is a ROOT file 
source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create

}

outputs:
{
  out1:
  {
      module_type: RootOutput
      fileName:    "cvnevaluator_r%r_s%s.root" 
      fastCloning: false
      dataTier: "full-reconstructed"
  }
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
  # Declare the modules
  producers:
  { 
    cvnmap: @local::standard_cvnmapper
    cvneval: @local::standard_cvnevaluator
  }

  # Build the paths
  map: [ cvnmap, cvneval ]
  
  out: [out1]


}

physics.producers.cvnmap.HitsModuleLabel: "linecluster"
physics.producers.cvnmap.TimeResolution: 6
physics.producers.cvnmap.WireLength: 400
physics.producers.cvnmap.TdcWidth: 280


########################################################################
