#include "services_dune.fcl"
#include "caldata_dune.fcl"
#include "hitfindermodules_dune.fcl"
#include "cluster_dune.fcl"
#include "trackfindermodules_dune.fcl"
#include "pandoramodules_dune.fcl"
#include "calorimetry_dune35t.fcl"
#include "mctrutht0matching.fcl"
#include "t0reco.fcl"
#include "opticaldetectormodules_dune.fcl"

process_name: Reco

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "reco_hist.root" }
  TimeTracker:       {}
  SimpleMemoryCheck:     { ignoreTotal: 1 } # default is one
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::dunefd_services
}
#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  10        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
# random number saver
  rns:                 { module_type: RandomNumberSaver }
# convert raw::RawDigit to recob::wire
  caldata:            @local::dunefd_calwire
# actual hit finder
  gaushit:            @local::dunefd_gaushitfinder
  fasthit:            @local::dunefd_fasthitfinder
#  cchit:              @local::dunefd_clustercrawlerhit
# disambiguation cheater that removes duplicate hits
  dcheat:             @local::dunefd_disambigcheat
  fasthitdc:          @local::dunefd_disambigcheat
#  dcheatcc:           @local::dune35t_disambigcheat
# reconstruction using gaushit and disambiguration cheater
  lineclusterdc:      @local::dunefd_linecluster
#  costrkdc:           @local::dunefd_cosmictracker
  calodc:             @local::dune35t_calomc
  pandoradc:          @local::dune35t_pandora
  particlestitcherdc: @local::dune35t_particlestitcher
  pandoracalodc:      @local::dune35t_calomc
  pmtrackdc:           @local::dune35t_pmalgtrackmaker
  pmtrackcalodc:       @local::dune35t_calomc
# actual disambiguation
  hitfd:             @local::dunefd_hitfinderfd
# reconstruction using disambiguated hits
  linecluster:        @local::dune35t_linecluster
  calo:               @local::dune35t_calomc
  pandora:            @local::dune35t_pandora
  particlestitcher:   @local::dune35t_particlestitcher
  pandoracalo:        @local::dune35t_calomc
  pmtrack:             @local::dune35t_pmalgtrackmaker
  pmtrackcalo:         @local::dune35t_calomc
# photon detector reconstruction
  opflash:            @local::dune35t_opflash 
      
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [ rns, 
         #optical flashes
         opflash,
         #TPC wire signals      
         caldata,
         #hit reco with cheated disambiguation
         gaushit, dcheat, #cchit, fasthit, fasthitdc,
         #cluster reco with cheated disambiguation
         lineclusterdc,
         #pandora with cheated disambiguation
         #pandoradc, particlestitcherdc 
         #pmatrack with cheated disambiguation
         pmtrackdc,
         #real disambiguation
         hitfd,
         #cluster reco
         linecluster,
         #pandora
         #pandora, particlestitcher,
         #pmatrack
         pmtrack
         ]
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_reco.root"
   dataTier:    "full-reconstructed"
   compressionLevel: 1
 }
}
### Here, we overwrite ALL module labels with the ones defined above.
physics.producers.fasthitdc.ChanHitLabel:              "fasthit"
physics.producers.lineclusterdc.HitFinderModuleLabel:  "dcheat"
physics.producers.calodc.TrackModuleLabel:             "costrkdc"
physics.producers.calodc.SpacePointModuleLabel:        "costrkdc"

physics.producers.pmtrackdc.HitModuleLabel:             "lineclusterdc"
physics.producers.pmtrackdc.ClusterModuleLabel:         "lineclusterdc"
physics.producers.pmtrackcalo.TrackModuleLabel:         "pmtrack"
physics.producers.pmtrackcalo.SpacePointModuleLabel:    "pmtrack"
physics.producers.pmtrackcalodc.TrackModuleLabel:       "pmtrackdc"
physics.producers.pmtrackcalodc.SpacePointModuleLabel:  "pmtrackdc"

physics.producers.linecluster.HitFinderModuleLabel:    "hitfd"
physics.producers.calo.TrackModuleLabel:               "costrk"
physics.producers.calo.SpacePointModuleLabel:          "costrk"
#physics.producers.kalmanhit.HitModuleLabel:            "hitfd"
#physics.producers.kalmanhit.ClusterModuleLabel:        "fuzzy"

#Pandora configurations
physics.producers.pandoradc.HitFinderModuleLabel:           "dcheat"
physics.producers.particlestitcherdc.PFParticleModuleLabel: "pandoradc"
physics.producers.particlestitcherdc.TrackModuleLabel:      "pandoradc"
physics.producers.particlestitcherdc.UseXCoordinate:        false
physics.producers.pandoracalodc.TrackModuleLabel:           "particlestitcherdc"
physics.producers.pandoracalodc.SpacePointModuleLabel:      "pandoradc"

physics.producers.pandora.HitFinderModuleLabel:             "hitfd"
physics.producers.particlestitcher.PFParticleModuleLabel:   "pandora"
physics.producers.particlestitcher.TrackModuleLabel:        "pandora"
physics.producers.particlestitcher.UseXCoordinate:          false
physics.producers.pandoracalo.TrackModuleLabel:             "particlestitcher"
physics.producers.pandoracalo.SpacePointModuleLabel:        "pandora"

#Optical detector configuration
physics.producers.opflash.InputModule:                      "opdigi"

#physics.producers.linecluster.ClusterCrawlerAlg.TimeDelta:    [2,3,3]
#physics.producers.lineclusterdc.ClusterCrawlerAlg.TimeDelta:    [2,3,3]
