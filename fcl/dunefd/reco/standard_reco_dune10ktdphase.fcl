#include "services_dune.fcl"
#include "caldata_dune.fcl"
#include "hitfindermodules_dune.fcl"
#include "cluster_dune.fcl"
#include "trackfindermodules_dune.fcl"
#include "pandoramodules.fcl"
#include "calorimetry_dune10kt.fcl"
#include "mctrutht0matching.fcl"
#include "t0reco.fcl"

process_name: Reco

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "hist.root" }
  TimeTracker:       {}
  MemoryTracker:     {}
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
  @table::dunefddphase_simulation_services
}

# services.message.destinations.LogStandardOut.threshold: "INFO"

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents: -1
  fileNames: ["detsim.root"]
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
# random number saver
  rns:                 { module_type: RandomNumberSaver }
# convert raw::RawDigit to recob::wire
  caldata:            @local::dunefddphase_calwire
# actual hit finder
  hitcheat:           @local::dunefd_hitcheater
  gaushit:            @local::dunefddphase_gaushitfinder
#  gaushit:	      @local::dunefd_gaushitfinder
  fasthit:            @local::dunefd_fasthitfinder
  cchit:              @local::dunefd_clustercrawlerhit
  hitfd:             @local::dunefd_hitfinderfd
# reconstruction using disambiguated hits
  linecluster:        @local::dunefd_linecluster
#  stitch:             @local::dune35t_trackstitcher
  calo:               @local::dune10kt_calomc
  pandora:            @local::standard_pandoraneutrino
  pmtrack:            @local::dunefd_pmalgtrackmaker
  pmtrackpfp:	      @local::dunefd_pmalgtrackmaker
  pmtrackcalo:        @local::dune10kt_calomc
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [ rns, caldata, fasthit, gaushit, cchit, hitfd, linecluster, pmtrack ]

	analyzers:
	{
	}
	 
	analyzeIt:  [ ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "reco.root"
   dataTier:    "full-reconstructed"
   compressionLevel: 1
 }
}
### Here, we overwrite ALL module labels with the ones defined above.

physics.producers.gaushit.MinSig: [5, 5]
physics.producers.caldata.SigThrFact: 0.5

#PMAlg configuration

physics.producers.pmtrackcalo.TrackModuleLabel:         "pmtrack"
physics.producers.pmtrackcalo.SpacePointModuleLabel:    "pmtrack"
physics.producers.pmtrackcalo.T0ModuleLabel:            "mctrutht0pmtrack"

physics.producers.pmtrack.HitModuleLabel:             "linecluster"
physics.producers.pmtrack.ClusterModuleLabel:         "linecluster"

physics.producers.pmtrack.CluMatchingAlg:		1
physics.producers.pmtrack.MinSeedSize2ndPass:		4
physics.producers.pmtrack.RunVertexing:               true
physics.producers.pmtrack.FlipToBeam:                 true
physics.producers.pmtrack.AutoFlip_dQdx:              false
physics.producers.pmtrack.MakePFPs:                   true

physics.producers.pmtrackpfp.HitModuleLabel:             "linecluster"
physics.producers.pmtrackpfp.ClusterModuleLabel:         "pandora"
physics.producers.pmtrackpfp.CluMatchingAlg:		  3
physics.producers.pmtrackpfp.MinSeedSize2ndPass:	  4
physics.producers.pmtrackpfp.TrackingSkipPdg:            [0]
physics.producers.pmtrackpfp.RunVertexing:               false
physics.producers.pmtrackpfp.FlipToBeam:                 false
physics.producers.pmtrackpfp.AutoFlip_dQdx:              false
physics.producers.pmtrackpfp.MakePFPs:                   false

#Pandora configurations

#Optical detector configuration


