#include "services_lbne.fcl"
#include "singles.fcl"
#include "largeantmodules.fcl"
#include "detsimmodules.fcl"
#include "opticaldetectormodules.fcl"
#include "photpropservices_lbne.fcl"
#include "photpropmodules_lbne.fcl"
#include "lightsource.fcl"


process_name: LibraryBuild





services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "PhotonLibraryFile_lbne35texample_hists.root" }
  Timing:       {}
#  RandomNumberGenerator: {} #ART native random number generator
  user:          @local::lbne35t_simulation_services  # defined in services.fcl
  message:       @local::standard_info
}
services.user.Geometry.GDML: "lbne35t4apa_v2.gdml"
services.user.Geometry.SortingParameters.DetectorVersion: "lbne35t4apa_v2"


##### Parameter changes for simulation services #####


services.user.BackTracker: ""
services.user.LArFFT: ""
services.user.SignalShapingServiceLBNE35t: ""



#Start each new event with an empty event.
#source:
#{
#  module_type: EmptyEvent
#  maxEvents:   1000           # Number of events to create
#  firstRun:    1           # Run number to use for this file
#  firstEvent:  1           # number of first event in the file
#}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   #generator: @local::standard_lightsource	  
   #largeant:  @local::standard_largeant	  
 }

 analyzers:
 {
   #pmtresponse: @local::standard_simphotoncounter    # defined in opticaldetectormodules.fcl
   libana: @local::lbne35t_photonlibraryanalyzer
 }


 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 simulate: [ ]
 analyzeIt:  [ libana ]
 #define the output stream, there could be more than one if using filters 
 stream1:  [ ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [analyzeIt]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
#outputs:
#{
# out1:
# {
#   module_type: RootOutput
#   fileName:    "opticallibrary_lbne35t_hists.root" #default file name, can override from command line with -o or --output
# }
#}



# Begin optical specific parts:

# Use the build pset, with BuildLibraryFile set to true.
# Use cryo boundary
services.user.PhotonVisibilityService: @local::lbne35t_photonvisibilityservice

#
# Examine your own library file - need to customize the visibility service
#

#services.user.PhotonVisibilityService.LibraryFile: "lib_LBNE35tv2.root"

# Number of voxels
#services.user.PhotonVisibilityService.NX: 30
#services.user.PhotonVisibilityService.NY: 30
#services.user.PhotonVisibilityService.NZ: 30

#services.user.PhotonVisibilityService.UseCryoBoundary: true

# IF UseCryoBoundary is set to false, so use the following parameters. 
#services.user.PhotonVisibilityService.XMin:  -2.
#services.user.PhotonVisibilityService.XMax:  2.
#services.user.PhotonVisibilityService.YMin:  -1.
#services.user.PhotonVisibilityService.YMax:  1.
#services.user.PhotonVisibilityService.ZMin:  10.
#services.user.PhotonVisibilityService.ZMax:  12.


# enable optical physics in LArG4
services.user.LArG4Parameters.EnabledPhysics: [ "Em", 
						"Optical", 
						"SynchrotronAndGN", 
						"Ion", 
						"Hadron", 
						"Decay", 
						"HadronElastic", 
						"Stopping", 
						"NeutronTrackingCut" ]

# enable this custom physics list
services.user.LArG4Parameters.UseCustomPhysics: true

# disable cerenkov light
services.user.LArProperties.EnableCerenkovLight: false


##### Parameter changes for the generator (lightsource) #####

# do not allow lightsource to write output into root file
#physics.producers.generator.FillTree: false
#physics.producers.generator.N: 1000

##### Parameter changes for the pmt respnse analyzer (simphotoncounter) #####

#physics.analyzers.pmtresponse.MakeAllPhotonsTree: true
#physics.analyzers.pmtresponse.MakeDetectedPhotonsTree: true
#physics.analyzers.pmtresponse.MakeSimPhotonssTree: true
#physics.analyzers.pmtresponse.MakeEventsTree: true


