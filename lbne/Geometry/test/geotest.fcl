#include "geometry_lbne.fcl"
#include "services_lbne.fcl"

process_name: testGeo

services:
{
  # Load the service that manages root files for histograms.
  # TFileService: { fileName: "reco_hist.root"         }
  #scheduler:    { wantTracer: false wantSummary: true }
  #Timing:       {}
  #SimpleMemoryCheck:     { ignoreTotal: 1 } # default is one
  #RandomNumberGenerator: {} #ART native random number generator
  message: @local::standard_info
  user: {}
}

#services.message.debugmsg.type: "cout"
#services.message.infomsg.threshold: "DEBUG"
services.user.ExptGeoHelperInterface: @local::lbne_geometry_helper
services.user.Geometry: @local::detector_geo
services.user.Geometry.GDML: "lbne35t4apa_v3.gdml"
services.user.Geometry.ROOT: "lbne35t4apa_v3.gdml"
services.user.Geometry.SortingParameters.DetectorVersion: "lbne35t4apa_v3"

source:
{
  module_type: EmptyEvent
  maxEvents:   1       # Number of events to create
}

outputs:
{
}

physics:
{

 analyzers:
 {
   geotest: { 
     module_type: "GeometryTest"
     PrintWires:  false
       # The test feeds a out-of-world coordinate to NearestWire() and expects
       # an exception to be thrown; LBNE currently prefers to cap the wire ID to
       # a valid wire.
       # Therefore we disable that part of the test.
     DisableWireBoundaryCheck: true
   }
   geotest35: { module_type: "GeometryTest35" }
 }

 #define the path for analyzer modules, order does not matter.
 #see lines starting physics.analyzers below
 ana:  [ geotest, geotest35 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [ ] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ana]  
}


physics.analyzers.geotest.CheckForOverlaps: false
